{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Hoc/WithAuthRedirect.tsx","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/ProfileInfo/MyPosts/MyPosts.module.css","Components/Profile/ProfileInfo/Post/Post.module.css","Components/Profile/ProfileInfo/MyPosts/MyPost/MyPost.module.css","Components/Profile/ProfileInfo/Status.tsx","Components/Profile/ProfileInfo/PersonalInfo/PersonalInfo.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/ProfileInfo/Post/Post.tsx","Components/Profile/ProfileInfo/MyPosts/MyPost/MyPost.tsx","Components/Profile/ProfileInfo/MyPosts/MyPost/MyPostContainer.tsx","Components/Profile/ProfileInfo/MyPosts/MyPosts.tsx","Components/Profile/ProfileInfo/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","connect","props","restProps","to","module","exports","React","memo","status","changeStatus","useState","isEditable","setIsEditable","statusValue","setStatusValue","useEffect","autoFocus","onChange","e","currentTarget","value","onBlur","type","onDoubleClick","PersonalInfo","userProfile","updatePhoto","className","style","wrapperPersonalInfo","avatarProfile","src","photos","large","alt","files","personalInfo","fullName","lookingForAJob","contacts","vk","lookingForAJobDescription","backgroundImage","Post","message","wrapper","avatar","MyPost","AddPostAC","useForm","register","onSubmit","handleSubmit","data","textarea","formInputContainer","formInput","id","formInputLabel","button","onClick","MyPostContainer","addPostAC","MyPosts","postsElements","posts","map","el","myPosts","MyPostsContainer","profilePage","Profile","profile","compose","getUsersTC","getStatusTC","changeStatusTC","updatePhotoTC","withRouter","match","userId","params"],"mappings":"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","file":"static/js/3.f751458b.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../Redux/reduxStore\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\nexport default WithAuthRedirect\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundImage\":\"ProfileInfo_backgroundImage__24rVW\",\"wrapperPersonalInfo\":\"ProfileInfo_wrapperPersonalInfo__yRT_n\",\"avatarProfile\":\"ProfileInfo_avatarProfile__11RdR\",\"personalInfo\":\"ProfileInfo_personalInfo__3q4Xx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__20uBr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__2i0kN\",\"avatar\":\"Post_avatar__2KInb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInputContainer\":\"MyPost_formInputContainer__1lJ18\",\"formInput\":\"MyPost_formInput__4lDt9\",\"formInputLabel\":\"MyPost_formInputLabel__1egl5\",\"button\":\"MyPost_button__pKNQg\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype StatusPropsType = {\r\n    status: string\r\n    changeStatus: (status: string) => void\r\n}\r\nconst Status = ({status, changeStatus}: StatusPropsType) => {\r\n    const [isEditable, setIsEditable] = useState<boolean>(false)\r\n    const [statusValue, setStatusValue] = useState<string>(status)\r\n\r\n    const onChangeStatusValue = (e: ChangeEvent<HTMLInputElement>) => setStatusValue(e.currentTarget.value)\r\n\r\n    const onBlurHandler = () => {\r\n        setIsEditable(false)\r\n        changeStatus(statusValue)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatusValue(status)\r\n    }, [status])\r\n\r\n    return <p>Status : {\r\n        isEditable\r\n            ? <input autoFocus onChange={onChangeStatusValue} onBlur={onBlurHandler} type=\"text\" value={statusValue}/>\r\n            : <span onDoubleClick={() => setIsEditable(true)}>{status}</span>}  </p>\r\n}\r\n\r\nexport default React.memo(Status)\r\n","import style from \"../ProfileInfo.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {UserProfileType} from \"../../../../Redux/profileReducer\";\r\nimport Status from \"../Status\";\r\n\r\ntype PersonalInfoPropsType = {\r\n    userProfile: UserProfileType | null\r\n    changeStatus: (status: string) => void\r\n    status: string\r\n    updatePhoto: (photos: File) => void\r\n}\r\n\r\nconst PersonalInfo = ({userProfile, status, changeStatus, updatePhoto}: PersonalInfoPropsType) => {\r\n\r\n    const onUpdatePhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.target.files && updatePhoto(e.target.files[0])\r\n    }\r\n\r\n    return <div className={style.wrapperPersonalInfo}>\r\n        <img className={style.avatarProfile} src={userProfile?.photos.large} alt=\"\"/>\r\n        <input type=\"file\" onChange={onUpdatePhoto}/>\r\n        <div className={style.personalInfo}><h3>{userProfile?.fullName}</h3>\r\n            <p>Looking for a job: <span>{userProfile?.lookingForAJob ? 'Ищу работу за шаурму' : 'Ищу за деньги'}</span></p>\r\n            <Status status={status} changeStatus={changeStatus}/>\r\n            <p>Web Site: <span>{userProfile?.contacts.vk}</span></p>\r\n            <p>Description for Job: {userProfile?.lookingForAJobDescription}</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default PersonalInfo\r\n","import React from \"react\";\r\nimport style from './ProfileInfo.module.css'\r\nimport {UserProfileType} from \"../../../Redux/profileReducer\";\r\nimport PersonalInfo from \"./PersonalInfo/PersonalInfo\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    userProfile: UserProfileType | null\r\n    status: string\r\n    changeStatus: (status: string) => void\r\n    updatePhoto: (photos: File) => void\r\n}\r\n\r\nconst ProfileInfo = ({userProfile, status, changeStatus, updatePhoto}: ProfileInfoPropsType) => {\r\n\r\n    return <>\r\n        <div>\r\n            <img className={style.backgroundImage}\r\n                 src='https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fblogs-images.forbes.com%2Fjosephliu%2Ffiles%2F2019%2F06%2F1-office-1516329_1920-1200x299.jpg'\r\n                 alt=\"bg\"/>\r\n            <PersonalInfo status={status} userProfile={userProfile} changeStatus={changeStatus} updatePhoto={updatePhoto}/>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default React.memo(ProfileInfo)\r\n","import React from 'react';\r\nimport style from './Post.module.css'\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n}\r\n\r\nconst Post = ({message}: PostPropsType) => {\r\n\r\n    return <div className={style.wrapper}>\r\n        <img className={style.avatar} src=\"https://cdn4.iconfinder.com/data/icons/diversity-v2-0-volume-03/64/celebrity-matrix-morpheus-256.png\" alt=\"\"/>\r\n        <p>{message}</p>\r\n    </div>\r\n};\r\n\r\nexport default Post;\r\n","import style from \"./MyPost.module.css\";\r\nimport React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\ntype MyPostPropsType = {\r\n    AddPostAC: (message: string) => void\r\n}\r\n\r\nconst MyPost = ({AddPostAC}: MyPostPropsType) => {\r\n\r\n    const {register, handleSubmit,} = useForm<{ textarea: string }>();\r\n    const onSubmit = handleSubmit((data) => AddPostAC(data.textarea))\r\n\r\n    return <>\r\n        <h4>My posts</h4>\r\n        <label className={style.formInputContainer}>\r\n            <textarea className={style.formInput} id=\"word-count-input\" {...register('textarea')}/>\r\n            <span className={style.formInputLabel}/>\r\n            <button className={style.button} onClick={onSubmit}>Send</button>\r\n        </label>\r\n    </>\r\n}\r\n\r\nexport default MyPost\r\n","import MyPost from \"./MyPost\";\r\nimport {addPostAC} from \"../../../../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst MyPostContainer = connect(null, {AddPostAC: addPostAC})(MyPost)\r\n\r\nexport default MyPostContainer;\r\n","import React from 'react';\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"../Post/Post\";\r\nimport {PostType} from \"../../../../Redux/profileReducer\";\r\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\r\n\r\ntype MyPostsPropsType = {\r\n    posts: PostType[]\r\n}\r\nconst MyPosts = ({posts}: MyPostsPropsType) => {\r\n\r\n    const postsElements = posts.map((el) => <Post key={el.id} message={el.message}/>)\r\n\r\n    return <div className={style.myPosts}>\r\n        <MyPostContainer/>\r\n        {postsElements}\r\n    </div>\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {PostType} from \"../../../../Redux/profileReducer\";\r\nimport {AppStateType} from \"../../../../Redux/reduxStore\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    posts: PostType[]\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {})(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport style from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./ProfileInfo/MyPosts/MyPostsContainer\";\r\nimport {UserProfileType} from \"../../Redux/profileReducer\";\r\n\r\ntype UserProfilePropsType = {\r\n    userProfile: UserProfileType | null\r\n    status: string\r\n    changeStatus: (status: string) => void\r\n    updatePhoto: (photos:File) => void\r\n}\r\n\r\nconst Profile = ({userProfile, status, changeStatus, updatePhoto}: UserProfilePropsType) => {\r\n\r\n    return <main className={style.profile}>\r\n        <ProfileInfo userProfile={userProfile} changeStatus={changeStatus} status={status} updatePhoto={updatePhoto}/>\r\n        <MyPostsContainer/>\r\n    </main>\r\n}\r\n\r\n\r\nexport default Profile\r\n","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {changeStatusTC, getStatusTC, getUsersTC, updatePhotoTC, UserProfileType} from \"../../Redux/profileReducer\";\r\nimport {AppStateType} from \"../../Redux/reduxStore\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport WithAuthRedirect from \"../../Hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapDispatchToPropsType = {\r\n    getUsersTC: (userId: string) => void\r\n    getStatusTC: (userId: number) => void\r\n    changeStatusTC: (status: string) => void\r\n    updatePhotoTC: (photos: File) => void\r\n}\r\n\r\ntype ParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype CommonType = MapDispatchToPropsType & MapStateToPropsType\r\ntype PropsType = RouteComponentProps<ParamsType> & CommonType\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    userProfile: UserProfileType | null\r\n    auth: boolean\r\n    status: string\r\n}\r\n\r\nconst ProfileContainer: React.FC<PropsType> = ({userProfile, getUsersTC, updatePhotoTC, changeStatusTC, match, getStatusTC, auth, status, ...restProps}) => {\r\n\r\n    let userId = !match.params.userId ? match.params.userId = '11899' : match.params.userId\r\n\r\n    useEffect(() => {\r\n        getUsersTC(userId)\r\n        getStatusTC(+userId)\r\n    }, [userId])\r\n\r\n\r\n    return <Profile updatePhoto={updatePhotoTC} userProfile={userProfile} changeStatus={changeStatusTC} status={status} {...restProps}/>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        userProfile: state.profilePage.userProfile,\r\n        auth: state.auth.isAuth,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps, {getUsersTC, getStatusTC, changeStatusTC, updatePhotoTC}),\r\n    withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}
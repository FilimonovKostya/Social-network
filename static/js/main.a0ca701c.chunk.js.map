{"version":3,"sources":["Components/Nav/Navbar.module.css","Components/Dialog/Dialog.module.css","Components/Header/Header.module.css","Components/Profile/Profile.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Redux/State.ts","Components/Header/Header.tsx","Components/Nav/Friends/NavbarFriends.tsx","Components/Nav/Navbar.tsx","Components/Dialog/Message/Message.tsx","Components/Dialog/DialogItem/DialogItem.tsx","Components/Dialog/Dialog.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/Nav/Links/Message/Message.tsx","Components/Nav/Links/News/News.tsx","Components/Nav/Links/Settings/Settings.tsx","Components/Nav/Links/Music/Music.tsx","App.tsx","render.tsx","index.tsx"],"names":["module","exports","onChange","console","log","state","profilePage","posts","id","message","like","img","newPostText","dialogsPages","dialogs","name","messages","sidebar","addPost","newPost","push","updateNewPostText","newText","Header","className","s","header","src","alt","NavbarFriends","props","avatarsFriendsElements","map","f","friends","avatars","Navbar","nav","to","activeClassName","active","Message","DialogItem","path","dialog","Dialog","newMessageText","React","createRef","dialogsElements","dialogsPageState","messageElements","dialogsItems","ref","cols","rows","placeholder","onClick","alert","current","value","Post","post","MyPosts","postsElement","show","newPostElement","myPosts","text","callbackAddPost","ProfileInfo","Profile","profile","News","Settings","Music","App","render","component","renderTree","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0ca701c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3cKIi\",\"active\":\"Navbar_active__3f9JC\",\"friends\":\"Navbar_friends__2QqU-\",\"avatars\":\"Navbar_avatars__2itlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__2t3I2\",\"dialogsItems\":\"Dialog_dialogsItems__2EGS0\",\"dialog\":\"Dialog_dialog__1oCEv\",\"messages\":\"Dialog_messages__pTLBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2A1hr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3ujDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2C1j2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2hUDH\"};","let onChange = () => {\r\n    console.log('State was changed')\r\n}\r\n\r\nexport type profilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\n\r\ntype PostsType = {\r\n    id: number\r\n    message: string\r\n    like: number\r\n    img: string\r\n}\r\n\r\ntype dialogsPagesType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\n\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type SidebarType = {\r\n    id: number\r\n    img: string\r\n}\r\n\r\nexport type RootStateType = {\r\n    profilePage: profilePageType\r\n    dialogsPages: dialogsPagesType\r\n    sidebar: Array<SidebarType>\r\n}\r\n\r\nlet state: RootStateType = {\r\n    profilePage: {\r\n        posts: [\r\n            {\r\n                id: 1,\r\n                message: 'Hello how are u?',\r\n                like: 15,\r\n                img: 'https://api.penit.ink/uploads/avatars/default.png'\r\n            },\r\n            {\r\n                id: 2,\r\n                message: 'I am fine, thank you',\r\n                like: 8,\r\n                img: 'https://cdn4.iconfinder.com/data/icons/heroes-villains-vol-1-colored/100/Batman-256.png'\r\n            },\r\n            {\r\n                id: 3,\r\n                message: 'What about u ?',\r\n                like: 4,\r\n                img: 'https://cdn2.iconfinder.com/data/icons/heroes-villains-vol-2-colored-1/100/Captain_America-256.png'\r\n            },\r\n        ],\r\n        newPostText: ''\r\n    },\r\n    dialogsPages: {\r\n        dialogs: [\r\n            {id: 1, name: 'Julia'},\r\n            {id: 2, name: 'Lisa'},\r\n            {id: 3, name: 'Kostya'},\r\n            {id: 4, name: 'Kirill'},\r\n            {id: 5, name: 'Nikita'},\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Hello, how are u?'},\r\n            {id: 2, message: 'Do u like watch Marvel?'},\r\n            {id: 3, message: 'I love React'},\r\n            {id: 4, message: 'I want to become a React Developer'},\r\n            {id: 5, message: 'Life Belarus'},]\r\n    },\r\n    sidebar: [\r\n        {id: 1, img: 'https://www.flaticon.com/svg/static/icons/svg/147/147144.svg'},\r\n        {id: 2, img: 'https://cdn.iconscout.com/icon/free/png-512/avatar-370-456322.png'},\r\n        {id: 3, img: 'https://cdn.iconscout.com/icon/free/png-256/avatar-367-456319.png'},\r\n    ]\r\n}\r\n\r\n\r\nexport let addPost = () => {\r\n\r\n    let newPost: PostsType = {\r\n        id: 4,\r\n        message: state.profilePage.newPostText,\r\n        like: 0,\r\n        img: 'https://sun9-12.userapi.com/c636128/v636128491/c29b/u7Tn_OdLPCw.jpg'\r\n    }\r\n\r\n    state.profilePage.posts.push(newPost)\r\n    onChange()\r\n}\r\n\r\n\r\nexport let updateNewPostText = (newText: string) => {\r\n    state.profilePage.newPostText = newText\r\n    onChange()\r\n}\r\n\r\n\r\nexport const subscribe = (observer:() => void) =>{\r\n    onChange = observer\r\n}\r\n\r\nexport default state","import React from \"react\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return <header className={s.header}>\r\n        <img src=\"https://cdn.worldvectorlogo.com/logos/react-2.svg\" alt=\"logo\"/>\r\n    </header>\r\n}\r\n\r\nexport default Header","import {SidebarType} from \"../../Redux/State\";\r\nimport s from \"../Navbar.module.css\";\r\nimport React from \"react\";\r\n\r\ntype NavbarFriendsPropsType = {\r\n    sidebar: Array<SidebarType>\r\n}\r\n\r\nexport function NavbarFriends(props: NavbarFriendsPropsType) {\r\n    let avatarsFriendsElements = props.sidebar.map(f => <img src={f.img} alt=\"\"/>)\r\n\r\n    return <div className={s.friends}>\r\n        <h2>Friends</h2>\r\n        <div className={s.avatars}> {avatarsFriendsElements} </div>\r\n\r\n    </div>\r\n}","import React from \"react\";\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SidebarType} from \"../Redux/State\";\r\nimport {NavbarFriends} from \"./Friends/NavbarFriends\";\r\n\r\ntype NavbarPropsType = {\r\n    sidebar: Array<SidebarType>\r\n}\r\n\r\nfunction Navbar(props: NavbarPropsType) {\r\n    return <nav className={s.nav}>\r\n        <ul>\r\n            <li><NavLink to={\"/profile\"} activeClassName={s.active}>Profile</NavLink></li>\r\n            <li><NavLink to={'/dialog'} activeClassName={s.active}>Message</NavLink></li>\r\n            <li><NavLink to={'/news'} activeClassName={s.active}>News</NavLink></li>\r\n            <li><NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink></li>\r\n            <li><NavLink to={'/music'} activeClassName={s.active}>Music</NavLink></li>\r\n        </ul>\r\n        <NavbarFriends sidebar={props.sidebar}/>\r\n    </nav>\r\n\r\n}\r\n\r\nexport default Navbar","import s from \"../Dialog.module.css\";\r\nimport React from \"react\";\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nexport function Message(props: MessageType) {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n\r\n    </div>\r\n}\r\n\r\n","import {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialog.module.css\";\r\nimport React from \"react\";\r\n\r\nexport type DialogItemType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport function DialogItem(props: DialogItemType) {\r\n    const path = '/dialog/' + props.id\r\n    return <NavLink to={path} className={s.dialog}>{props.name}</NavLink>\r\n}","import React from \"react\";\r\nimport s from './Dialog.module.css'\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {dialogsPageStateType} from \"../../App\";\r\n\r\nexport type DialogsPropsType = {\r\n    dialogsPageState: dialogsPageStateType\r\n}\r\n\r\nexport function Dialog(props: DialogsPropsType) {\r\n\r\n    let newMessageText = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let addMessage = () => {\r\n        alert(newMessageText.current?.value)\r\n    }\r\n\r\n    let dialogsElements = props.dialogsPageState.dialogs.map(dialog => <DialogItem id={dialog.id} name={dialog.name}/>)\r\n\r\n    let messageElements = props.dialogsPageState.messages.map(message => <Message message={message.message} id={message.id}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <textarea ref={newMessageText}\r\n                          cols={30}\r\n                          rows={5}\r\n                          placeholder={'Як все страшно'}/>\r\n                <div><button onClick={addMessage}>Send</button> </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nexport type PostProps = {\r\n    id: number\r\n    message: string\r\n    like: number\r\n    img:string\r\n}\r\n\r\nfunction Post(props: PostProps) {\r\n    return <div className={s.post}>\r\n            <img src={props.img} alt=\"deadpool\"/>\r\n            <span>{props.message}</span>\r\n            <span> <b>♥</b> {props.like} </span>\r\n        </div>\r\n\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from './MyPosts.module.css'\r\nimport {profilePageType} from \"../../Redux/State\";\r\n\r\ntype PostsPropsType = {\r\n    posts: profilePageType\r\n    callbackAddPost: (post: string) => void\r\n    updateNewPostText:(newText:string) => void\r\n}\r\n\r\nfunction MyPosts(props: PostsPropsType) {\r\n\r\n    let postsElement = props.posts.posts.map(show => <Post id={show.id} message={show.message} img={show.img} like={show.like}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let addPost = () => {\r\n        if (newPostElement.current) {\r\n            props.callbackAddPost(newPostElement.current?.value)\r\n            newPostElement.current.value = ''\r\n            props.updateNewPostText('')\r\n        }\r\n    }\r\n\r\n    let onPostChange = () =>{\r\n        let text = newPostElement.current?.value\r\n        text && props.updateNewPostText(text)\r\n    }\r\n\r\n    return <div className={s.myPosts}>\r\n        <div>My posts</div>\r\n        <textarea onChange={onPostChange}\r\n                  value={props.posts.newPostText}\r\n                  ref={newPostElement}\r\n                  cols={80}\r\n                  rows={5}\r\n                  placeholder={'Enter your post'}/>\r\n\r\n        <button onClick={addPost}>Send</button>\r\n        {postsElement}\r\n    </div>\r\n}\r\n\r\nexport default MyPosts","import React from \"react\";\r\n\r\nfunction ProfileInfo() {\r\n    return <div>\r\n        <div><img\r\n            src='https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fblogs-images.forbes.com%2Fjosephliu%2Ffiles%2F2019%2F06%2F1-office-1516329_1920-1200x299.jpg'\r\n            alt=\"bg\"/></div>\r\n        <div>Ava + des</div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {profilePageType} from \"../Redux/State\";\r\n\r\ntype PostsPropsType = {\r\n    posts: profilePageType\r\n    callbackAddPost: (post: string) => void\r\n    updateNewPostText:(newText:string) => void\r\n}\r\n\r\nfunction Profile(props: PostsPropsType) {\r\n    return <main className={s.profile}>\r\n        <ProfileInfo/>\r\n        <MyPosts posts={props.posts}\r\n                 callbackAddPost={props.callbackAddPost}\r\n                 updateNewPostText={props.updateNewPostText}\r\n        />\r\n    </main>\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\n\r\nexport function Message() {\r\n    return <div>\r\n        <h2>Message</h2>\r\n    </div>\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\n\r\nexport function News() {\r\n    return <div>\r\n        <h2>News</h2>\r\n    </div>\r\n}\r\n\r\nexport default News","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return <div>\r\n        <h2>Settings</h2>\r\n    </div>\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return <div>\r\n        <h2>Music</h2>\r\n    </div>\r\n}\r\n\r\nexport default Music","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Components/Header/Header\";\r\nimport Navbar from \"./Components/Nav/Navbar\";\r\nimport {Dialog} from \"./Components/Dialog/Dialog\";\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport Message from \"./Components/Nav/Links/Message/Message\";\r\nimport News from \"./Components/Nav/Links/News/News\";\r\nimport Settings from \"./Components/Nav/Links/Settings/Settings\";\r\nimport Music from \"./Components/Nav/Links/Music/Music\";\r\nimport {DialogItemType} from \"./Components/Dialog/DialogItem/DialogItem\";\r\nimport {MessageType} from \"./Components/Dialog/Message/Message\";\r\nimport {RootStateType} from \"./Components/Redux/State\";\r\n\r\ntype AppPropsType = {\r\n    state: RootStateType\r\n    callbackAddPost:(post: string) => void\r\n    updateNewPostText:(newText:string) => void\r\n}\r\n\r\nexport type dialogsPageStateType = {\r\n    dialogs: Array<DialogItemType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\n\r\nfunction App(props: AppPropsType) {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={'app-wrapper'}>\r\n                <Header/>\r\n                <Navbar sidebar={props.state.sidebar}/>\r\n                <div className={'app-profile'}>\r\n                    <Route path={'/dialog'} render={() => <Dialog dialogsPageState={props.state.dialogsPages}/>}/>\r\n                    <Route path={'/profile'}\r\n                           render={() => <Profile posts={props.state.profilePage} callbackAddPost={props.callbackAddPost} updateNewPostText={props.updateNewPostText}/>}/>\r\n                    <Route path={'/message'} component={Message}/>\r\n                    <Route path={'/news'} component={News}/>\r\n                    <Route path={'/settings'} component={Settings}/>\r\n                    <Route path={'/music'} component={Music}/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\nimport state, {addPost, updateNewPostText} from \"./Components/Redux/State\";\r\n\r\nexport let renderTree = () => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <App state={state} callbackAddPost={addPost} updateNewPostText={updateNewPostText}/>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    )\r\n\r\n\r\n}\r\n\r\nconsole.log('та почему не коммитится')","import {subscribe} from \"./Components/Redux/State\";\r\nimport {renderTree} from \"./render\";\r\n\r\n\r\nrenderTree()\r\n\r\nsubscribe(renderTree)"],"sourceRoot":""}
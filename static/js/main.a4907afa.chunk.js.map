{"version":3,"sources":["Api/api.ts","Components/Header/Header.module.css","Components/Users/Users.module.css","Components/Users/UserCard/UserCard.module.css","Components/Login/Login.module.css","Redux/profileReducer.ts","Redux/dialogsReducer.ts","Components/Preloader/loading.svg","Components/Preloader/Preloader.module.css","serviceWorker.ts","Components/Nav/Navbar.tsx","Components/Settings/Settings.tsx","Components/Music/Music.tsx","Components/News/News.tsx","Components/Users/UserCard/UserCard.tsx","Components/Users/Paginator/Paginator.tsx","Components/Users/Users.tsx","Redux/usersReducer.ts","Components/Preloader/Preloader.tsx","Components/Users/selectors/selectors.ts","Components/Users/UsersAPIContainer.tsx","Components/Header/HeaderProfile/HeaderProfile.tsx","Components/Header/Header.tsx","Redux/authReducer.ts","Components/Header/HeaderContainer.tsx","Redux/appReducer.ts","Components/Login/Login.tsx","Components/Login/LoginContainer.tsx","Hoc/WithLazyLoading.tsx","App.tsx","Redux/reduxStore.ts","index.tsx","Components/Nav/Navbar.module.css"],"names":["instance","axios","create","withCredentials","baseURL","headers","API","getUsers","currentPage","pageSize","get","then","response","data","setUsers","userId","res","follow","id","post","unFollow","delete","getAuth","setLogin","authData","logout","getStatus","changeStatus","status","put","updatePhoto","photo","formData","FormData","append","module","exports","initialState","posts","message","avatarImg","likes","userProfile","profileReducer","state","action","type","newPostMessage","photos","addPostAC","setStatusAC","updatePhotoAC","getUsersTC","dispatch","a","getStatusTC","changeStatusTC","resultCode","updatePhotoTC","console","log","dialogs","name","messages","dialogsReducer","newMessageItem","addMessageAC","Boolean","window","location","hostname","match","Navbar","className","style","nav","to","link","activeClassName","activeLink","Settings","Music","News","UserCard","followed","followTC","isDisabled","unFollowTC","wrapper","profil","bgImage","avatar","src","small","alt","text","disabled","onClick","Paginator","totalCount","setCurrentPage","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","el","active","key","Users","items","setCurrentPageAC","usersCard","index","container","pagination","usersWrapper","error","isLoading","setLoadingAC","setDisabledButtonAC","Preloader","preloader","getItems","usersPage","getCurrentPage","getTotalCount","getPageSize","getIsLoading","getIsDisabled","compose","connect","getUsersPageTC","users","useEffect","HeaderProfile","login","logoutTC","info","btn","Header","header","logo","isAuth","email","setLoginDataAC","setAuthDataAC","getAuthDataTC","auth","isInitialize","Login","useForm","mode","register","handleSubmit","errors","formState","useDispatch","onSubmit","setLoginDataTC","wrapperForm","loginForm","value","placeholder","required","password","minLength","WithLazyLoading","Component","fallback","DialogsContainer","React","lazy","ProfileContainer","app","setInitializeAppTC","path","render","exact","rootReducer","combineReducers","dialogsPage","profilePage","reduxStore","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a4907afa.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {UsersType} from \"../Redux/usersReducer\";\r\nimport {UserProfileType} from \"../Redux/profileReducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'a918abd3-e56d-4f51-9680-86b073810b9f'\r\n    },\r\n})\r\n\r\nexport type LoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n    captcha?: boolean\r\n}\r\n\r\nexport const API = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UsersType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    setUsers(userId: string) {\r\n        return instance.get<UserProfileType>(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\r\n            .then((res) => res.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    getAuth() {\r\n        return instance.get('auth/me')\r\n    },\r\n    setLogin(authData: LoginType) {\r\n        return instance.post(`auth/login`, authData)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    changeStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    updatePhoto(photo: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo);\r\n\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__8p0oN\",\"wrapper\":\"Header_wrapper__3z5pi\",\"avatar\":\"Header_avatar__3VHTI\",\"logo\":\"Header_logo__1XhKL\",\"info\":\"Header_info__162n1\",\"btn\":\"Header_btn__2SHcN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2p300\",\"pagination\":\"Users_pagination__133w2\",\"active\":\"Users_active__Vw3KK\",\"avatarIcon\":\"Users_avatarIcon__Ly-Jn\",\"usersWrapper\":\"Users_usersWrapper__1GBRZ\",\"btn\":\"Users_btn__2jK4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserCard_wrapper__1jObx\",\"profil\":\"UserCard_profil__2KiUY\",\"ikon\":\"UserCard_ikon__Y4yd1\",\"arama\":\"UserCard_arama__3jPsa\",\"bgImage\":\"UserCard_bgImage__RI4bR\",\"avatar\":\"UserCard_avatar__1A3d3\",\"text\":\"UserCard_text__3yT5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperForm\":\"Login_wrapperForm__3iqEx\",\"loginForm\":\"Login_loginForm__RwjOg\",\"links\":\"Login_links__35Gaa\",\"error\":\"Login_error__BnqnV\"};","import {Dispatch} from \"redux\";\r\nimport {API} from \"../Api/api\";\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    avatarImg: string\r\n    likes: number\r\n}\r\n\r\nexport type UserProfileType = {\r\n    aboutMe: string,\r\n    contacts: {\r\n        facebook: null | string,\r\n        website: null | string,\r\n        vk: null | string,\r\n        twitter: null | string,\r\n        instagram: null | string,\r\n        youtube: null | string,\r\n        github: null | string,\r\n        mainLink: null | string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string,\r\n        large: string\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    posts: PostType[]\r\n    userProfile: UserProfileType | null\r\n    status: string\r\n}\r\n\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST'\r\n    message: string\r\n}\r\n\r\nexport type SetUserProfileActionType = {\r\n    type: 'SET-USER-PROFILE',\r\n    userProfile: UserProfileType\r\n}\r\n\r\nexport type SetStatusActionType = {\r\n    type: 'SET-STATUS',\r\n    status: string\r\n}\r\n\r\nexport type UpdatePhotoActionType = {\r\n    type: 'UPDATE-PHOTO',\r\n    photos: { small: string, large: string }\r\n}\r\n\r\ntype ActionType = AddPostActionType | SetUserProfileActionType | SetStatusActionType | UpdatePhotoActionType\r\n\r\nconst initialState: InitialStateType = {\r\n    posts: [\r\n        {\r\n            message: 'Chose React or Vue ?',\r\n            avatarImg: '',\r\n            likes: 2,\r\n            id: 1,\r\n        },\r\n        {\r\n            message: 'React awesome library, in my opinion',\r\n            avatarImg: '',\r\n            likes: 100,\r\n            id: 2,\r\n        },\r\n        {\r\n            message: 'No, Vanila Js is the best framework',\r\n            avatarImg: '',\r\n            likes: -20,\r\n            id: 3,\r\n        },\r\n    ],\r\n\r\n    userProfile: null,\r\n    status: 'Samurai'\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'ADD-POST':\r\n            const newPostMessage: PostType = {message: action.message, avatarImg: '', likes: 5, id: 4}\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPostMessage],\r\n            }\r\n\r\n        case \"SET-USER-PROFILE\":\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case \"UPDATE-PHOTO\":\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, photos: action.photos} as UserProfileType\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = (message: string): AddPostActionType => ({type: 'ADD-POST', message})\r\nexport const setUserProfileAC = (userProfile: UserProfileType): SetUserProfileActionType => ({type: \"SET-USER-PROFILE\", userProfile})\r\nexport const setStatusAC = (status: string): SetStatusActionType => ({type: \"SET-STATUS\", status})\r\nexport const updatePhotoAC = (photos: { small: string, large: string }): UpdatePhotoActionType => ({type: \"UPDATE-PHOTO\", photos})\r\n\r\nexport const getUsersTC = (userId: string) => async (dispatch: Dispatch) => {\r\n\r\n    const res = await API.setUsers(userId)\r\n\r\n    dispatch(setUserProfileAC(res))\r\n\r\n}\r\n\r\nexport const getStatusTC = (userId: number) => async (dispatch: Dispatch) => {\r\n\r\n    const res = await API.getStatus(userId)\r\n\r\n    dispatch(setStatusAC(res.data))\r\n\r\n}\r\n\r\nexport const changeStatusTC = (status: string) => async (dispatch: Dispatch) => {\r\n\r\n    const res = await API.changeStatus(status)\r\n\r\n    if (res.data.resultCode === 0) {\r\n\r\n        dispatch(setStatusAC(status))\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const updatePhotoTC = (photos: File) => async (dispatch: Dispatch) => {\r\n\r\n    const res = await API.updatePhoto(photos)\r\n\r\n    if (res.data.resultCode === 0) {\r\n        console.log('res',res.data)\r\n        dispatch(updatePhotoAC(res.data.data.photos))\r\n\r\n    }\r\n}\r\n\r\n","export type MessageItem = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type DialogsItems = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type DialogPageStateType = {\r\n    dialogs: DialogsItems[]\r\n    messages: MessageItem[]\r\n}\r\n\r\ntype ActionType = ReturnType<typeof addMessageAC>\r\n\r\nconst initialState: DialogPageStateType = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Batman'\r\n        }, {\r\n            id: 2,\r\n            name: 'Pavel Durov'\r\n        }, {\r\n            id: 3,\r\n            name: 'Ilon Mask'\r\n        }, {\r\n            id: 4,\r\n            name: 'Den Abramov'\r\n        }, {\r\n            id: 5,\r\n            name: 'Filimonov Kostya'\r\n        },],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Do you like React.JS ?'},\r\n        {id: 3, message: 'What do you think about Vue?'},\r\n        {id: 4, message: 'Do you heard about Vanila JS ?'},\r\n        {id: 5, message: 'React awesome!!'}\r\n    ],\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action: ActionType): DialogPageStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'ADD-MESSAGE': {\r\n            const newMessageItem: MessageItem = {id: 6, message: action.message}\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessageItem],\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageAC = (message: string) => ({type: 'ADD-MESSAGE', message} as const)\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.bed30ada.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__KdOrv\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport style from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n\r\n    return <nav className={style.nav}>\r\n        <ul>\r\n            <li><NavLink to=\"/profile\" className={style.link} activeClassName={style.activeLink}>Profile</NavLink></li>\r\n            <li><NavLink to=\"/dialogs\" className={style.link} activeClassName={style.activeLink}>Dialogs</NavLink></li>\r\n            <li><NavLink to=\"/users\" className={style.link} activeClassName={style.activeLink}>Users</NavLink></li>\r\n            <li><NavLink to=\"/news\" className={style.link} activeClassName={style.activeLink}>News</NavLink></li>\r\n            <li><NavLink to=\"/settings\" className={style.link} activeClassName={style.activeLink}>Settings</NavLink></li>\r\n            <li><NavLink to=\"/music\" className={style.link} activeClassName={style.activeLink}>Music</NavLink></li>\r\n        </ul>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\n\r\nconst Settings = () => {\r\n   return <div>\r\n       settings\r\n   </div>\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return <div>\r\n        music\r\n    </div>\r\n};\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport style from '../Users/UserCard/UserCard.module.css'\r\n\r\nconst News = () => {\r\n    return <p>News</p>\r\n};\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport style from \"./UserCard.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UserCardPropsType = {\r\n    name: string\r\n    status: string | null\r\n    followed: boolean\r\n    id: number\r\n    photos: {\r\n        large: string\r\n        small: string\r\n    }\r\n    followTC: (id: number) => void\r\n    unFollowTC: (id: number) => void\r\n    isDisabled: boolean\r\n}\r\n\r\nconst UserCard = ({name, status, followed, id, photos, followTC, isDisabled, unFollowTC}: UserCardPropsType) => {\r\n    console.log('followed', followed)\r\n    return <div className={style.wrapper}>\r\n        <div className={style.profil}>\r\n\r\n            <div className={style.bgImage}/>\r\n            <NavLink to={`profile/${id}`}> <img className={style.avatar}\r\n                                                src={photos.small ? photos.small : 'https://pm1.narvii.com/6802/b775c9e1266f61a61737324b45e0975ed22d7328v2_hq.jpg'}\r\n                                                alt={name}/> </NavLink>\r\n\r\n            <div className={style.text}>\r\n                <div>\r\n                    <p>Name : {name}</p>\r\n                    <p>Status : {status}</p>\r\n                    <p>Follow : {followed ? 'subscribe' : 'not subscribe'}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    followed\r\n                        ?  <button disabled={isDisabled} onClick={() => unFollowTC(id)}> un Follow</button>\r\n                        : <button disabled={isDisabled} onClick={() => followTC(id)}>  Follow</button>\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default UserCard;\r\n","import style from \"../Users.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\ntype PaginatorPropsType = {\r\n    totalCount: number\r\n    currentPage: number\r\n    setCurrentPage: (currentPage: number) => void\r\n}\r\nconst Paginator = ({totalCount, currentPage, setCurrentPage}: PaginatorPropsType) => {\r\n\r\n\r\n    const pagesCount = Math.ceil(totalCount / 10)\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / 10)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * 10 + 1\r\n    const rightPortionPageNumber = portionNumber * 10\r\n\r\n    return <>\r\n\r\n        {\r\n            portionNumber > 1 && <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>\r\n        }\r\n\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(el => {\r\n                return <span className={el === currentPage ? style.active : ''}\r\n                             key={el}\r\n                             onClick={() => setCurrentPage(el)}>{el}</span>\r\n            })}\r\n        {\r\n            portionCount > portionNumber && <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Paginator\r\n","import React from 'react';\r\nimport {ItemsType} from \"../../Redux/usersReducer\";\r\nimport style from './Users.module.css'\r\nimport UserCard from \"./UserCard/UserCard\";\r\nimport Paginator from \"./Paginator/Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    setCurrentPageAC: (currentPage: number) => void\r\n    followTC: (id: number) => void\r\n    unFollowTC: (id: number) => void\r\n    items: ItemsType[]\r\n    currentPage: number\r\n    totalCount: number\r\n    isDisabled: boolean\r\n}\r\n\r\nconst Users = ({items, currentPage, totalCount, setCurrentPageAC, isDisabled, followTC, unFollowTC}: UsersPropsType) => {\r\n\r\n    const usersCard = items.map((el, index) => <UserCard isDisabled={isDisabled} followTC={followTC} unFollowTC={unFollowTC} key={index} name={el.name}\r\n                                                status={el.status} followed={el.followed} id={el.id} photos={el.photos as any}/>)\r\n\r\n    return <div className={style.container}>\r\n        <div className={style.pagination}>\r\n            <Paginator totalCount={totalCount} currentPage={currentPage} setCurrentPage={setCurrentPageAC}/>\r\n        </div>\r\n        <div className={style.usersWrapper}>\r\n            {usersCard}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;\r\n","import {Dispatch} from \"redux\";\r\nimport {API} from \"../Api/api\";\r\n\r\nexport type ItemsType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    }\r\n    status: string | null\r\n    followed: boolean\r\n}\r\nexport type UsersType = {\r\n    items: ItemsType[]\r\n    currentPage: number\r\n    pageSize: number\r\n    totalCount: number\r\n    error: string[] | null\r\n    isLoading: boolean\r\n    isDisabled: boolean\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof followAC>\r\n    | ReturnType<typeof unFollowAC>\r\n    | ReturnType<typeof setUsersAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalCountAC>\r\n    | ReturnType<typeof setLoadingAC>\r\n    | ReturnType<typeof setDisabledButtonAC>\r\n\r\nconst initialState: UsersType = {items: [], currentPage: 1, error: null, totalCount: 0, pageSize: 10, isLoading: false, isDisabled: false}\r\n\r\nexport const usersReducer = (state = initialState, action: ActionType): UsersType => {\r\n    switch (action.type) {\r\n\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state,\r\n                items: state.items.map(el => {\r\n                    if (el.id === action.userId) {\r\n                        return {...el, followed: true}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n\r\n        case \"UN-FOLLOW\":\r\n            return {\r\n                ...state,\r\n                items: state.items.map(el => {\r\n                    if (el.id === action.userId) {\r\n                        return {...el, followed: false}\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n\r\n        case \"SET-USERS\":\r\n            return {...state, items: [...action.users, ...state.items]}\r\n\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case \"SET-TOTAL-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n\r\n        case \"SET-LOADING-STATUS\":\r\n            return {...state, isLoading: action.isLoading}\r\n\r\n        case \"SET-DISABLED-STATUS\":\r\n            return {\r\n                ...state,\r\n                isDisabled: action.isDisabled\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userId: number) => ({type: 'FOLLOW', userId} as const)\r\nexport const unFollowAC = (userId: number) => ({type: 'UN-FOLLOW', userId} as const)\r\nexport const setUsersAC = (users: ItemsType[]) => ({type: 'SET-USERS', users} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: 'SET-CURRENT-PAGE', currentPage} as const)\r\nexport const setTotalCountAC = (totalCount: number) => ({type: 'SET-TOTAL-COUNT', totalCount} as const)\r\nexport const setLoadingAC = (isLoading: boolean) => ({type: 'SET-LOADING-STATUS', isLoading} as const)\r\nexport const setDisabledButtonAC = (isDisabled: boolean) => ({type: 'SET-DISABLED-STATUS', isDisabled} as const)\r\n\r\n\r\nexport const getUsersPageTC = (currentPage: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n\r\n        dispatch(setLoadingAC(true))\r\n\r\n        const response = await API.getUsers(currentPage, pageSize)\r\n\r\n        dispatch(setTotalCountAC(Math.ceil(response.totalCount / pageSize)))\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setLoadingAC(false))\r\n        dispatch(setDisabledButtonAC(false))\r\n\r\n    }\r\n}\r\n\r\nexport const unFollowTC = (id: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n\r\n        dispatch(setDisabledButtonAC(true))\r\n\r\n        await API.unFollow(id)\r\n\r\n        dispatch(setDisabledButtonAC(false))\r\n        dispatch(unFollowAC(id))\r\n\r\n    }\r\n}\r\n\r\nexport const followTC = (id: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n\r\n        dispatch(setDisabledButtonAC(true))\r\n\r\n        await API.follow(id)\r\n\r\n        dispatch(setDisabledButtonAC(false))\r\n        dispatch(followAC(id))\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport preloader from './loading.svg'\r\nimport style from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div className={style.wrapper}><img src={preloader} alt=\"preloader\"/></div>\r\n};\r\n\r\nexport default Preloader;\r\n","import {AppStateType} from \"../../../Redux/reduxStore\";\r\n\r\nexport const getItems = (state: AppStateType) => {\r\n    return state.usersPage.items\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getTotalCount = (state: AppStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getIsLoading = (state: AppStateType) => {\r\n    return state.usersPage.isLoading\r\n}\r\n\r\nexport const getIsDisabled = (state: AppStateType) => {\r\n    return state.usersPage.isDisabled\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {followTC, getUsersPageTC, ItemsType, setCurrentPageAC, unFollowTC} from \"../../Redux/usersReducer\";\r\nimport {AppStateType} from \"../../Redux/reduxStore\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {getCurrentPage, getIsDisabled, getIsLoading, getItems, getPageSize, getTotalCount} from \"./selectors/selectors\";\r\nimport {compose} from \"redux\";\r\n\r\ntype mapDispatchToPropsType = {\r\n    setCurrentPageAC: (currentPage: number) => void\r\n    getUsersPageTC: (currentPage: number, pageSize: number) => void\r\n    followTC: (id: number) => void\r\n    unFollowTC: (id: number) => void\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    items: ItemsType[]\r\n    currentPage: number\r\n    totalCount: number\r\n    pageSize: number\r\n    isLoading: boolean\r\n    isDisabled: boolean\r\n}\r\n\r\ntype UsersAPIContainerPropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nconst UsersAPIContainer = ({\r\n                               items, currentPage, totalCount, setCurrentPageAC, isDisabled, followTC, unFollowTC, pageSize, isLoading, getUsersPageTC\r\n                           }: UsersAPIContainerPropsType) => {\r\n\r\n    useEffect(() => {\r\n        getUsersPageTC(currentPage, pageSize)\r\n    }, [currentPage, pageSize])\r\n\r\n\r\n\r\n\r\n    return isLoading\r\n        ? <Preloader/>\r\n        : <Users items={items} currentPage={currentPage}\r\n                 totalCount={totalCount}\r\n                 unFollowTC={unFollowTC}\r\n                 followTC={followTC}\r\n                 setCurrentPageAC={setCurrentPageAC}\r\n                 isDisabled={isDisabled}\r\n        />\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        items: getItems(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalCount: getTotalCount(state),\r\n        pageSize: getPageSize(state),\r\n        isLoading: getIsLoading(state),\r\n        isDisabled: getIsDisabled(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setCurrentPageAC, getUsersPageTC, followTC, unFollowTC}))\r\n(UsersAPIContainer)\r\n","import style from \"../Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype HeaderProfilePropsType = {\r\n    login: string\r\n    logoutTC: (isAuth: boolean) => void\r\n}\r\n\r\nconst HeaderProfile = ({login, logoutTC}: HeaderProfilePropsType) => {\r\n\r\n    return <>\r\n        <img src=\"https://pm1.narvii.com/6802/b775c9e1266f61a61737324b45e0975ed22d7328v2_hq.jpg\" alt=\"person\"/>\r\n        <div className={style.info}>\r\n            <h3>{login}</h3>\r\n            {login\r\n                ? <button className={style.btn} onClick={() => logoutTC(false)}> Logout </button>\r\n                : <NavLink to={'/login'}> Name: {login} Login </NavLink>}\r\n\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default HeaderProfile\r\n","import React from \"react\";\r\nimport style from './Header.module.css'\r\nimport HeaderProfile from \"./HeaderProfile/HeaderProfile\";\r\n\r\ntype HeaderPropsType = {\r\n    login: string\r\n    logoutTC: (isAuth: boolean) => void\r\n}\r\n\r\nconst Header = ({login, logoutTC}: HeaderPropsType) => {\r\n\r\n    return <header className={style.header}>\r\n        <div className={style.wrapper}>\r\n            <div className={style.avatar}>\r\n                <HeaderProfile login={login} logoutTC={logoutTC}/>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={style.logo}><img src=\"https://cdn.worldvectorlogo.com/logos/react-2.svg\" alt=\"logo\"/></div>\r\n    </header>\r\n}\r\n\r\nexport default Header\r\n","import {Dispatch} from \"redux\";\r\nimport {API, LoginType} from \"../Api/api\";\r\n\r\nexport type InitialStateType = {\r\n    isAuth: boolean\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {\r\n        id: number,\r\n        email: string,\r\n        login: string\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setLoginDataAC> | ReturnType<typeof setAuthDataAC>\r\n\r\nconst initialState: InitialStateType = {isAuth: false, messages: [''], data: {id: 0, email: '', login: ''}, resultCode: 0}\r\n\r\nexport const authReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case \"SET-LOGIN\":\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                data: {...action.data}\r\n            }\r\n\r\n        case \"SET-AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setLoginDataAC = (data: { id: number, email: string, login: string }) => ({type: 'SET-LOGIN', data} as const)\r\nexport const setAuthDataAC = (isAuth: boolean) => ({type: 'SET-AUTH', isAuth} as const)\r\n\r\nexport const getAuthDataTC = () => async (dispatch: Dispatch) => {\r\n\r\n    const res = await API.getAuth()\r\n\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setLoginDataAC(res.data.data))\r\n    }\r\n\r\n}\r\n\r\nexport const setLoginDataTC = (data: LoginType) => async (dispatch: Dispatch) => {\r\n\r\n    await API.setLogin(data)\r\n\r\n    dispatch(setAuthDataAC(true))\r\n\r\n}\r\n\r\nexport const logoutTC = () => async (dispatch: Dispatch) => {\r\n\r\n    await API.logout()\r\n\r\n    dispatch(setLoginDataAC({id: 0, email: '', login: ''}))\r\n\r\n    dispatch(setAuthDataAC(false))\r\n\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/reduxStore\";\r\nimport {getAuthDataTC, logoutTC} from \"../../Redux/authReducer\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    login: string\r\n    isAuth: boolean\r\n\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    logoutTC: (isAuth: boolean) => void\r\n    getAuthDataTC: () => void\r\n}\r\n\r\nconst HeaderContainer = ({login, logoutTC, isAuth, getAuthDataTC}: MapDispatchToPropsType & MapStateToPropsType) => {\r\n\r\n    useEffect(() => {\r\n        getAuthDataTC()\r\n    })\r\n\r\n    return <Header logoutTC={logoutTC} login={login}/>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        login: state.auth.data.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {logoutTC, getAuthDataTC})\r\n)(HeaderContainer)\r\n","import {getAuthDataTC} from \"./authReducer\";\r\n\r\nexport type InitialStateType = {\r\n    isInitialize: boolean\r\n}\r\n\r\ntype ActionType = ReturnType<typeof initializedAppAC>\r\n\r\nconst initialState: InitialStateType = {isInitialize: false}\r\n\r\nexport const appReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case \"SET-INITIALIZE\":\r\n            return {\r\n                ...state,\r\n                isInitialize: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const initializedAppAC = () => ({type: 'SET-INITIALIZE'} as const)\r\n\r\nexport const setInitializeAppTC = () => async (dispatch: any) => {\r\n\r\n    await dispatch(getAuthDataTC())\r\n\r\n    dispatch(initializedAppAC())\r\n\r\n}\r\n","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {setLoginDataTC} from \"../../Redux/authReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from './Login.module.css'\r\n\r\ntype IFormInput = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n}\r\n\r\nconst Login = () => {\r\n\r\n    const {register, handleSubmit, formState: {errors},} = useForm<IFormInput>({mode: 'onTouched'});\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = handleSubmit((data) => dispatch(setLoginDataTC(data)))\r\n\r\n    return (\r\n        <div className={style.wrapperForm}>\r\n            <form className={style.loginForm} onSubmit={onSubmit}>\r\n                <input type=\"text\" value={'konstantinfilimonou@gmail.com'} className={errors.email && 'Require' ? `${style.error}` : ''}\r\n                       placeholder={!errors.email ? 'Email' : 'Required field'} {...register(\"email\", {required: true,})}/>\r\n\r\n                <input type=\"password\" value={'KOSTYA1234END.'} className={errors.password && 'Require' ? `${style.error}` : ''}\r\n                       placeholder={!errors.password ? 'Password' : 'Required field'} {...register(\"password\", {required: true, minLength: 5})} />\r\n\r\n                <input type=\"submit\" name=\"Login\" value=\"Login\"/>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport {compose} from \"redux\";\r\nimport Login from \"./Login\";\r\nimport {AppStateType} from \"../../Redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst LoginContainer = ({isAuth}: mapStatePropsType) => {\r\n\r\n    if (isAuth) return <Redirect to={'/profile'}/>\r\n\r\n    return <Login/>\r\n};\r\n\r\nconst mapStateProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateProps)\r\n)(LoginContainer);\r\n","import React, {ComponentType, Suspense} from 'react';\r\nimport Preloader from \"../Components/Preloader/Preloader\";\r\n\r\nconst WithLazyLoading = (Component: ComponentType) => {\r\n    return <Suspense fallback={<Preloader/>}>\r\n        <Component/>\r\n    </Suspense>\r\n};\r\n\r\nexport default WithLazyLoading;\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./Components/Nav/Navbar\";\r\nimport {Route} from 'react-router-dom';\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport News from \"./Components/News/News\";\r\nimport UsersAPIContainer from \"./Components/Users/UsersAPIContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport {AppStateType} from \"./Redux/reduxStore\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {setInitializeAppTC} from \"./Redux/appReducer\";\r\nimport Preloader from \"./Components/Preloader/Preloader\";\r\nimport LoginContainer from \"./Components/Login/LoginContainer\";\r\nimport WithLazyLoading from \"./Hoc/WithLazyLoading\"\r\n\r\n\r\ntype mapStatePropsType = {\r\n    isInitialize: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    setInitializeAppTC: () => void\r\n}\r\n\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\r\n\r\n\r\nfunction App({isInitialize, setInitializeAppTC}: mapDispatchToPropsType & mapStatePropsType) {\r\n\r\n    useEffect(() => {\r\n        setInitializeAppTC()\r\n    }, [])\r\n\r\n    if (!isInitialize) return <Preloader/>\r\n\r\n    return (\r\n        <div className={'app-wrapper'}>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={'app-content'}>\r\n                <Route path={'/profile/:userId?'} render={() => WithLazyLoading(ProfileContainer)}/>\r\n                <Route path={'/dialogs'} render={() => WithLazyLoading(DialogsContainer )}/>\r\n                <Route path={'/users'} render={() => <UsersAPIContainer/>}/>\r\n                <Route path={'/news'} render={() => <News/>}/>\r\n                <Route path={'/settings'} render={() => <Settings/>}/>\r\n                <Route path={'/music'} render={() => <Music/>}/>\r\n                <Route exact path={'/login'} render={() => <LoginContainer/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateProps = (state: AppStateType): mapStatePropsType => {\r\n    return {\r\n        isInitialize: state.app.isInitialize,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateProps, {setInitializeAppTC})\r\n)(App);\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {dialogsReducer} from \"./dialogsReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport {appReducer} from \"./appReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const reduxStore = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n","import * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {reduxStore} from \"./Redux/reduxStore\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={reduxStore}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1sP4t\",\"link\":\"Navbar_link__30d9T\",\"activeLink\":\"Navbar_activeLink__3OrZZ\"};"],"sourceRoot":""}
{"version":3,"sources":["Components/Nav/Links/Dialogs/Dialog.module.css","Components/Nav/Navbar.module.css","Components/Nav/Friends/Friends.module.css","Components/Header/Header.module.css","Components/Profile/Profile.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.tsx","Components/Nav/Friends/Friends.tsx","Components/Nav/Navbar.tsx","Components/Nav/Links/Dialogs/DialogsItem/DialogsItem.tsx","Components/Nav/Links/Dialogs/DialogMessage/Messages.tsx","Components/Nav/Links/Dialogs/Dialogs.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Redux/State.ts","Components/Profile/Profile.tsx","Components/Nav/Links/Message/Message.tsx","Components/Nav/Links/News/News.tsx","Components/Nav/Links/Settings/Settings.tsx","Components/Nav/Links/Music/Music.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","Friends","props","navbarElements","state","friends","map","f","name","friendWrapper","avatarsFriends","Navbar","nav","to","activeClassName","active","navbar","DialogItem","path","id","dialog","img","dialogsItems","Messages","message","messageItem","left","Dialogs","dialogsElement","dialogsPage","dialogs","messagesElement","messages","newMessage","React","createRef","heading","messageAvatar","messageAvatarItem","ref","onClick","current","value","alert","Post","post","like","MyPosts","postsElement","profilePage","posts","p","likesCount","newPostElement","myPosts","cols","rows","addColbackPost","ProfileInfo","addPost","postMessage","newPost","push","Profile","profile","Message","News","Settings","Music","App","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.eb3dd06e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__3cBEg\",\"heading\":\"Dialog_heading__3zfGx\",\"dialogsItems\":\"Dialog_dialogsItems__gwpVX\",\"dialog\":\"Dialog_dialog__13a8y\",\"messages\":\"Dialog_messages__3RBef\",\"messageAvatar\":\"Dialog_messageAvatar__1oPec\",\"messageItem\":\"Dialog_messageItem__2Ob7z\",\"left\":\"Dialog_left__27oQ2\",\"messageAvatarItem\":\"Dialog_messageAvatarItem__29u3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3yhXc\",\"active\":\"Navbar_active__3hQXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendWrapper\":\"Friends_friendWrapper__24lUT\",\"friends\":\"Friends_friends__1vkIu\",\"avatarsFriends\":\"Friends_avatarsFriends__MNQk5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__FWOD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2YQ7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__14HYG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__JCwiL\"};","import React from \"react\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return <header className={s.header}>\r\n        <img src=\"https://cdn.worldvectorlogo.com/logos/react-2.svg\" alt=\"logo\"/>\r\n    </header>\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport s from \"./Friends.module.css\"\r\nimport { navbarType} from \"../../Redux/State\";\r\n\r\nexport type FriendsProps = {\r\n    state: navbarType\r\n}\r\n\r\n\r\nexport function Friends(props: FriendsProps) {\r\n\r\n    let navbarElements = props.state.friends.map(f => {\r\n        return <div><img src={f.src} alt=\"\"/><p>{f.name}</p></div>\r\n    })\r\n\r\n\r\n    return <div className={s.friendWrapper}>\r\n        <div className={s.friends}>\r\n            <h2>Friends</h2>\r\n            <div className={s.avatarsFriends}>\r\n                {navbarElements}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Friends} from \"./Friends/Friends\";\r\nimport { navbarType} from \"../Redux/State\";\r\n\r\ntype StateProps = {\r\n    navbar: navbarType\r\n}\r\n\r\nfunction Navbar(props: StateProps) {\r\n    return <div className={s.nav}>\r\n        <nav>\r\n            <ul>\r\n                <li><NavLink to={\"/profile\"} activeClassName={s.active}>Profile</NavLink></li>\r\n                <li><NavLink to={'/dialog'} activeClassName={s.active}>Message</NavLink></li>\r\n                <li><NavLink to={'/news'} activeClassName={s.active}>News</NavLink></li>\r\n                <li><NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink></li>\r\n                <li><NavLink to={'/music'} activeClassName={s.active}>Music</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n       <Friends state={props.navbar}/>\r\n    </div>\r\n}\r\n\r\nexport default Navbar","import s from \"../Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype DialogsItemProps = {\r\n    name: string\r\n    id: number\r\n    img:string\r\n}\r\n\r\nexport function DialogItem(props: DialogsItemProps) {\r\n    let path = '/dialog/' + props.id\r\n    return <div className={s.dialog}>\r\n        <img src={props.img} alt=\"\"/>\r\n        <NavLink to={path} className={s.dialogsItems} id={'/dialog/' + props.id}>{props.name}\r\n        </NavLink>\r\n\r\n    </div>\r\n}\r\n\r\nexport default DialogItem","import s from \"../Dialog.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nexport function Messages(props: MessagePropsType) {\r\n    return <div className={s.message}> <p className={`${s.messageItem} ${s.left}`}> {props.message}</p>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Messages","import React from \"react\";\r\nimport s from './Dialog.module.css'\r\nimport {DialogItem} from \"./DialogsItem/DialogsItem\";\r\nimport {Messages} from \"./DialogMessage/Messages\";\r\nimport {dialogsPageType} from \"../../../Redux/State\";\r\n\r\n\r\ntype dialogsPageProps = {\r\n    dialogsPage: dialogsPageType\r\n}\r\n\r\nexport function Dialogs(props: dialogsPageProps) {\r\n\r\n    let dialogsElement = props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} img={dialog.img}/>)\r\n\r\n    let messagesElement = props.dialogsPage.messages.map(message => <Messages message={message.message}/>)\r\n\r\n    let newMessage = React.createRef<HTMLTextAreaElement>()\r\n    function addNewMessage() {\r\n        let message = newMessage.current?.value\r\n        alert(message)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div><h3 className={s.heading}>Dialog</h3></div>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messageAvatar}>\r\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/892/892744.svg\" alt=\"r\"/></div>\r\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/136/136401.svg\" alt=\"r\"/></div>\r\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/892/892744.svg\" alt=\"r\"/></div>\r\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/136/136401.svg\" alt=\"r\"/></div>\r\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/892/892744.svg\" alt=\"r\"/></div>\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                {messagesElement}\r\n                <textarea  ref={newMessage}/>\r\n                <button onClick={addNewMessage}>Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\ntype PostProps = {\r\n    message: string\r\n    like: number\r\n    img:string\r\n}\r\n\r\n\r\n\r\nfunction Post(props: PostProps) {\r\n    return <div className={s.post}>\r\n            <img src={props.img} alt=\"deadpool\"/>\r\n            <span>{props.message}</span>\r\n            <span> <b>♥</b> {props.like} </span>\r\n        </div>\r\n\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {profilePageType} from \"../../Redux/State\";\r\n\r\n\r\ntype profilePageProps = {\r\n    profilePage: profilePageType\r\n    addColbackPost: (message: string) => void\r\n}\r\n\r\n\r\nfunction MyPosts(props: profilePageProps) {\r\n\r\n    let postsElement = props.profilePage.posts.map(p => <Post message={p.message} like={p.likesCount} img={p.img}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let addPost = () => {\r\n        debugger\r\n        if (newPostElement.current) {\r\n            props.addColbackPost(newPostElement.current.value)\r\n        }\r\n    }\r\n\r\n    return <div className={s.myPosts}>\r\n        <div>My posts</div>\r\n        <textarea cols={80} rows={5} ref={newPostElement}>Add post</textarea>\r\n        <div>\r\n            <button onClick={addPost}>Send</button>\r\n        </div>\r\n        {postsElement}\r\n    </div>\r\n}\r\n\r\nexport default MyPosts","import React from \"react\";\r\n\r\nexport function ProfileInfo() {\r\n    return (\r\n        <div>\r\n            <div><img src='https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fblogs-images.forbes.com%2Fjosephliu%2Ffiles%2F2019%2F06%2F1-office-1516329_1920-1200x299.jpg'\r\n                      alt=\"bg\"/></div>\r\n            <div>Ava + des</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","export type postsType = {\r\n    id:number\r\n    message:string\r\n    likesCount:number\r\n    img:string\r\n}\r\n\r\nexport type profilePageType ={\r\n    posts: Array<postsType>\r\n}\r\n\r\nexport type messagesType = {\r\n    id:number\r\n    message:string\r\n}\r\n\r\nexport type friendsType = {\r\n    id:number\r\n    src: string\r\n    name:string\r\n}\r\n\r\nexport type navbarType = {\r\n    friends: Array<friendsType>\r\n}\r\n\r\nexport type dialogsType = {\r\n    id:number\r\n    name:string\r\n    img:string\r\n}\r\n\r\nexport type dialogsPageType = {\r\n    dialogs: Array<dialogsType>\r\n    messages: Array<messagesType>\r\n}\r\n\r\nexport type RootStateType = {\r\n    dialogsPage: dialogsPageType\r\n    profilePage: profilePageType\r\n    navbar: navbarType\r\n}\r\n\r\n\r\nexport let state:RootStateType = {\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: 'Kostya', img:'https://i.pinimg.com/originals/03/be/95/03be95a68fdcf84edfa7b4e311fa45d9.jpg'},\r\n            {id: 2, name: 'Julia', img:'https://i.pinimg.com/originals/90/60/b5/9060b5b5cf06dd74532456d92e1f0fe3.jpg'},\r\n            {id: 3, name: 'Helena', img: 'https://i.pinimg.com/originals/c5/fd/5b/c5fd5b84f9fcb29d7d4a195d79fd0c62.png'},\r\n            {id: 4, name: 'Zoi' ,img: 'https://i.pinimg.com/originals/a0/d6/14/a0d61449ed5f52e3c448e7a391318462.png'},\r\n            {id: 5, name: 'Ahri', img:'https://i.pinimg.com/originals/60/d1/1c/60d11c933c025721085a322a0399e7d2.jpg'},\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Hello, how are u?'},\r\n            {id: 2, message: 'I am fine, what about u?'},\r\n            {id: 3, message: 'Do u love ReactJs'},\r\n            {id: 4, message: 'I like'},\r\n            {id: 5, message: 'lorem ispictus farm na htel,lorem ispictus farm na htel,lorem ispictus farm na htel,lorem ispictus farm na htel'},\r\n        ]\r\n    },\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: 'Hello how are u?', likesCount: 15, img: 'https://api.penit.ink/uploads/avatars/default.png'},\r\n            {id: 2, message: 'I am fine, thank you', likesCount: 8, img: 'https://cdn4.iconfinder.com/data/icons/heroes-villains-vol-1-colored/100/Batman-256.png'},\r\n            {id: 3, message: 'What about u ?', likesCount: 4, img: 'https://cdn2.iconfinder.com/data/icons/heroes-villains-vol-2-colored-1/100/Captain_America-256.png'},\r\n        ]\r\n    },\r\n    navbar: {\r\n      friends:[\r\n            {id: 1, src: 'https://image.flaticon.com/icons/svg/2155/2155180.svg', name: 'Iron Man'},\r\n            {id: 2, src: 'https://image.flaticon.com/icons/svg/136/136398.svg', name: 'Rossamaha'},\r\n            {id: 3, src: 'https://image.flaticon.com/icons/svg/136/136400.svg', name: 'Deadpool'},\r\n        ]\r\n    }\r\n}\r\n\r\nexport const addPost = (postMessage:string) =>{\r\n    debugger\r\n    const newPost:postsType = {\r\n        id: 4,\r\n        message: postMessage,\r\n        likesCount:0,\r\n        img:'https://png.pngtree.com/png-vector/20190321/ourmid/pngtree-vector-users-icon-png-image_856952.jpg'\r\n    }\r\n\r\n    state.profilePage.posts.push(newPost)\r\n}\r\n\r\n\r\nexport default state","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {state} from \"../Redux/State\";\r\n\r\ntype ProfilePropsType ={\r\n    addColbackPost: (message: string) => void\r\n}\r\n\r\nfunction Profile(props:ProfilePropsType) {\r\n    return <main className={s.profile}>\r\n        <ProfileInfo/>\r\n        <MyPosts profilePage={state.profilePage} addColbackPost={props.addColbackPost}/>\r\n    </main>\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\n\r\nexport function Message() {\r\n    return <div>\r\n        <h2>Message</h2>\r\n    </div>\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\n\r\nexport function News() {\r\n    return <div>\r\n        <h2>News</h2>\r\n    </div>\r\n}\r\n\r\nexport default News","import React from \"react\";\r\n\r\nexport function Settings() {\r\n    return <div>\r\n        <h2>Settings</h2>\r\n    </div>\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\n\r\nexport function Music() {\r\n    return <div>\r\n        <h2>Music</h2>\r\n    </div>\r\n}\r\n\r\nexport default Music","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Components/Header/Header\";\r\nimport Navbar from \"./Components/Nav/Navbar\";\r\nimport {Dialogs} from \"./Components/Nav/Links/Dialogs/Dialogs\";\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport Message from \"./Components/Nav/Links/Message/Message\";\r\nimport News from \"./Components/Nav/Links/News/News\";\r\nimport Settings from \"./Components/Nav/Links/Settings/Settings\";\r\nimport Music from \"./Components/Nav/Links/Music/Music\";\r\nimport {RootStateType} from './Components/Redux/State';\r\nimport {addPost} from './Components/Redux/State'\r\n\r\ntype StateProps = {\r\n    state: RootStateType\r\n}\r\n\r\n\r\n\r\nfunction App(props: StateProps) {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={'app-wrapper'}>\r\n                <Header/>\r\n                <Navbar navbar={props.state.navbar}/>\r\n                <div className={'app-profile'}>\r\n                    <Route path={'/dialog'} render={() => <Dialogs dialogsPage={props.state.dialogsPage}/>}/>\r\n                    <Route path={'/message'} render={() => <Message/>}/>\r\n                    <Route path={'/profile'} render={() => <Profile addColbackPost={addPost}/>}/>\r\n                    <Route path={'/news'} component={News}/>\r\n                    <Route path={'/settings'} component={Settings}/>\r\n                    <Route path={'/music'} component={Music}/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {state} from \"./Components/Redux/State\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App state={state}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
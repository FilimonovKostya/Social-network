{"version":3,"sources":["Components/Nav/Links/Dialogs/Dialog.module.css","Components/Nav/Navbar.module.css","Components/Nav/Friends/Friends.module.css","Components/Header/Header.module.css","Components/Profile/Profile.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.tsx","Components/Nav/Friends/Friends.tsx","Components/Nav/Navbar.tsx","Components/Nav/Links/Dialogs/DialogsItem/DialogsItem.tsx","Components/Nav/Links/Dialogs/DialogMessage/Messages.tsx","Components/Nav/Links/Dialogs/Dialogs.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Redux/State.ts","Components/Profile/Profile.tsx","Components/Nav/Links/Message/Message.tsx","Components/Nav/Links/News/News.tsx","Components/Nav/Links/Settings/Settings.tsx","Components/Nav/Links/Music/Music.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","Friends","props","navbarElements","state","friends","map","f","name","friendWrapper","avatarsFriends","Navbar","nav","to","activeClassName","active","navbar","DialogItem","path","id","dialog","img","dialogsItems","Messages","message","messageItem","left","Dialogs","dialogsElement","dialogsPage","dialogs","messagesElement","messages","heading","messageAvatar","messageAvatarItem","Post","post","like","MyPosts","postsElement","profilePage","posts","p","likesCount","myPosts","cols","rows","ProfileInfo","Profile","profile","Message","News","Settings","Music","App","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.65834722.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__2ghAi\",\"heading\":\"Dialog_heading__Zn_mT\",\"dialogsItems\":\"Dialog_dialogsItems__23NFn\",\"dialog\":\"Dialog_dialog__2xnEb\",\"messages\":\"Dialog_messages__2jAWo\",\"messageAvatar\":\"Dialog_messageAvatar__2F0-H\",\"messageItem\":\"Dialog_messageItem__2Ipdl\",\"left\":\"Dialog_left__19BOj\",\"messageAvatarItem\":\"Dialog_messageAvatarItem__1dpud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1WHX3\",\"active\":\"Navbar_active__1tIRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendWrapper\":\"Friends_friendWrapper__R6ytj\",\"friends\":\"Friends_friends__1_o5l\",\"avatarsFriends\":\"Friends_avatarsFriends__12bjl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__6ghZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__6ywGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1CdWq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3MEag\"};","import React from \"react\";\nimport s from './Header.module.css'\n\nfunction Header() {\n    return <header className={s.header}>\n        <img src=\"https://cdn.worldvectorlogo.com/logos/react-2.svg\" alt=\"logo\"/>\n    </header>\n}\n\nexport default Header","import React from \"react\";\nimport s from \"./Friends.module.css\"\nimport { navbarType} from \"../../Redux/State\";\n\nexport type FriendsProps = {\n    state: navbarType\n}\n\n\nexport function Friends(props: FriendsProps) {\n\n    let navbarElements = props.state.friends.map(f => {\n        return <div><img src={f.src} alt=\"\"/><p>{f.name}</p></div>\n    })\n\n\n    return <div className={s.friendWrapper}>\n        <div className={s.friends}>\n            <h2>Friends</h2>\n            <div className={s.avatarsFriends}>\n                {navbarElements}\n            </div>\n        </div>\n    </div>\n}\n\nexport default Friends","import React from \"react\";\nimport s from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {Friends} from \"./Friends/Friends\";\nimport { navbarType} from \"../Redux/State\";\n\ntype StateProps = {\n    navbar: navbarType\n}\n\nfunction Navbar(props: StateProps) {\n    return <div className={s.nav}>\n        <nav>\n            <ul>\n                <li><NavLink to={\"/profile\"} activeClassName={s.active}>Profile</NavLink></li>\n                <li><NavLink to={'/dialog'} activeClassName={s.active}>Message</NavLink></li>\n                <li><NavLink to={'/news'} activeClassName={s.active}>News</NavLink></li>\n                <li><NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink></li>\n                <li><NavLink to={'/music'} activeClassName={s.active}>Music</NavLink></li>\n            </ul>\n        </nav>\n       <Friends state={props.navbar}/>\n    </div>\n}\n\nexport default Navbar","import s from \"../Dialog.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\ntype DialogsItemProps = {\n    name: string\n    id: number\n    img:string\n}\n\nexport function DialogItem(props: DialogsItemProps) {\n    let path = '/dialog/' + props.id\n    return <div className={s.dialog}>\n        <img src={props.img} alt=\"\"/>\n        <NavLink to={path} className={s.dialogsItems} id={'/dialog/' + props.id}>{props.name}\n        </NavLink>\n\n    </div>\n}\n\nexport default DialogItem","import s from \"../Dialog.module.css\";\nimport React from \"react\";\n\ntype MessagePropsType = {\n    message: string\n}\n\nexport function Messages(props: MessagePropsType) {\n    return <div className={s.message}> <p className={`${s.messageItem} ${s.left}`}> {props.message}</p></div>\n}\n\nexport default Messages","import React from \"react\";\nimport s from './Dialog.module.css'\nimport {DialogItem} from \"./DialogsItem/DialogsItem\";\nimport {Messages} from \"./DialogMessage/Messages\";\nimport {dialogsPageType} from \"../../../Redux/State\";\n\n\ntype dialogsPageProps = {\n    dialogsPage: dialogsPageType\n}\n\nexport function Dialogs(props: dialogsPageProps) {\n\n    let dialogsElement = props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} img={dialog.img}/>)\n\n    let messagesElement = props.dialogsPage.messages.map(message => <Messages message={message.message}/>)\n\n    return (\n        <div className={s.dialogs}>\n            <div><h3 className={s.heading}>Dialog</h3></div>\n            <div className={s.dialogsItems}>\n\n                {dialogsElement}\n            </div>\n            <div className={s.messageAvatar}>\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/892/892744.svg\" alt=\"r\"/></div>\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/136/136401.svg\" alt=\"r\"/></div>\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/892/892744.svg\" alt=\"r\"/></div>\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/136/136401.svg\" alt=\"r\"/></div>\n                <div className={s.messageAvatarItem}><img src=\"https://image.flaticon.com/icons/svg/892/892744.svg\" alt=\"r\"/></div>\n            </div>\n            <div className={s.messages}>\n\n                {messagesElement}\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs","import React from \"react\";\nimport s from './Post.module.css'\n\ntype PostProps = {\n    message: string\n    like: number\n    img:string\n}\n\n\n\nfunction Post(props: PostProps) {\n    return <div className={s.post}>\n            <img src={props.img} alt=\"deadpool\"/>\n            <span>{props.message}</span>\n            <span> <b>♥</b> {props.like} </span>\n        </div>\n\n}\n\nexport default Post","import React from \"react\";\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {profilePageType} from \"../../Redux/State\";\n\n\ntype profilePageProps = {\n    profilePage: profilePageType\n}\n\n\n\nfunction MyPosts(props: profilePageProps) {\n\n\n    let postsElement = props.profilePage.posts.map(p => <Post message={p.message} like={p.likesCount} img={p.img}/>)\n\n    return <div className={s.myPosts}>\n        <div>My posts</div>\n        <textarea cols={80} rows={5}>a</textarea>\n        <div>\n            <button>Send</button>\n        </div>\n        {postsElement}\n    </div>\n}\n\nexport default MyPosts","import React from \"react\";\n\nexport function ProfileInfo() {\n    return (\n        <div>\n            <div><img src='https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fblogs-images.forbes.com%2Fjosephliu%2Ffiles%2F2019%2F06%2F1-office-1516329_1920-1200x299.jpg'\n                      alt=\"bg\"/></div>\n            <div>Ava + des</div>\n        </div>\n    )\n}\n\nexport default ProfileInfo","export type postsType = {\n    id:number\n    message:string\n    likesCount:number\n    img:string\n}\n\nexport type profilePageType ={\n    posts: Array<postsType>\n}\n\nexport type messagesType = {\n    id:number\n    message:string\n}\n\nexport type friendsType = {\n    id:number\n    src: string\n    name:string\n}\n\nexport type navbarType = {\n    friends: Array<friendsType>\n}\n\nexport type dialogsType = {\n    id:number\n    name:string\n    img:string\n}\n\nexport type dialogsPageType = {\n    dialogs: Array<dialogsType>\n    messages: Array<messagesType>\n}\n\nexport type RootStateType = {\n    dialogsPage: dialogsPageType\n    profilePage: profilePageType\n    navbar: navbarType\n}\n\n\nexport let state:RootStateType = {\n    dialogsPage: {\n        dialogs: [\n            {id: 1, name: 'Kostya', img:'https://i.pinimg.com/originals/03/be/95/03be95a68fdcf84edfa7b4e311fa45d9.jpg'},\n            {id: 2, name: 'Julia', img:'https://i.pinimg.com/originals/90/60/b5/9060b5b5cf06dd74532456d92e1f0fe3.jpg'},\n            {id: 3, name: 'Helena', img: 'https://i.pinimg.com/originals/c5/fd/5b/c5fd5b84f9fcb29d7d4a195d79fd0c62.png'},\n            {id: 4, name: 'Zoi' ,img: 'https://i.pinimg.com/originals/a0/d6/14/a0d61449ed5f52e3c448e7a391318462.png'},\n            {id: 5, name: 'Ahri', img:'https://i.pinimg.com/originals/60/d1/1c/60d11c933c025721085a322a0399e7d2.jpg'},\n        ],\n        messages: [\n            {id: 1, message: 'Hello, how are u?'},\n            {id: 2, message: 'I am fine, what about u?'},\n            {id: 3, message: 'Do u love ReactJs'},\n            {id: 4, message: 'I like'},\n            {id: 5, message: 'lorem ispictus farm na htel,lorem ispictus farm na htel,lorem ispictus farm na htel,lorem ispictus farm na htel'},\n        ]\n    },\n    profilePage: {\n        posts: [\n            {id: 1, message: 'Hello how are u?', likesCount: 15, img: 'https://api.penit.ink/uploads/avatars/default.png'},\n            {id: 2, message: 'I am fine, thank you', likesCount: 8, img: 'https://cdn4.iconfinder.com/data/icons/heroes-villains-vol-1-colored/100/Batman-256.png'},\n            {id: 3, message: 'What about u ?', likesCount: 4, img: 'https://cdn2.iconfinder.com/data/icons/heroes-villains-vol-2-colored-1/100/Captain_America-256.png'},\n        ]\n    },\n    navbar: {\n      friends:[\n            {id: 1, src: 'https://image.flaticon.com/icons/svg/2155/2155180.svg', name: 'Iron Man'},\n            {id: 2, src: 'https://image.flaticon.com/icons/svg/136/136398.svg', name: 'Rossamaha'},\n            {id: 3, src: 'https://image.flaticon.com/icons/svg/136/136400.svg', name: 'Deadpool'},\n        ]\n    }\n}\n","import React from \"react\";\nimport s from './Profile.module.css'\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {state} from \"../Redux/State\";\n\n\n\nfunction Profile() {\n    return <main className={s.profile}>\n        <ProfileInfo/>\n        <MyPosts profilePage={state.profilePage}/>\n    </main>\n}\n\nexport default Profile","import React from \"react\";\n\nexport function Message() {\n    return <div>\n        <h2>Message</h2>\n    </div>\n}\n\nexport default Message","import React from \"react\";\n\nexport function News() {\n    return <div>\n        <h2>News</h2>\n    </div>\n}\n\nexport default News","import React from \"react\";\n\nexport function Settings() {\n    return <div>\n        <h2>Settings</h2>\n    </div>\n}\n\nexport default Settings","import React from \"react\";\n\nexport function Music() {\n    return <div>\n        <h2>Music</h2>\n    </div>\n}\n\nexport default Music","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Navbar from \"./Components/Nav/Navbar\";\nimport {Dialogs} from \"./Components/Nav/Links/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport Profile from \"./Components/Profile/Profile\";\nimport Message from \"./Components/Nav/Links/Message/Message\";\nimport News from \"./Components/Nav/Links/News/News\";\nimport Settings from \"./Components/Nav/Links/Settings/Settings\";\nimport Music from \"./Components/Nav/Links/Music/Music\";\nimport {RootStateType} from './Components/Redux/State';\n\ntype StateProps = {\n    state: RootStateType\n}\n\nfunction App(props: StateProps) {\n\n    return (\n        <BrowserRouter>\n            <div className={'app-wrapper'}>\n                <Header/>\n                <Navbar navbar={props.state.navbar}/>\n                <div className={'app-profile'}>\n                    <Route path={'/dialog'} render={() => <Dialogs dialogsPage={props.state.dialogsPage}/>}/>\n                    <Route path={'/message'} render={() => <Message/>}/>\n                    <Route path={'/profile'} render={() => <Profile/>}/>\n                    <Route path={'/news'} component={News}/>\n                    <Route path={'/settings'} component={Settings}/>\n                    <Route path={'/music'} component={Music}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {state} from \"./Components/Redux/State\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App state={state}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}